PI := <span class="hljs-number">3.14</span>
SOLAR_MASS := <span class="hljs-functionCall">*(4, PI, PI)</span>
DAYS_PER_YEAR := <span class="hljs-number">365.24</span>

<span class="hljs-keyword">fn</span> <span class="hljs-functionCall">Body(x : I32 , y : I32, z : I32, vx : I32, vy : I32, vz : I32, mass : I32)</span> -&gt; ():
    <span class="hljs-buit_in">this</span><span class="hljs-property">.x </span>:= x
    <span class="hljs-buit_in">this</span><span class="hljs-property">.y </span>:= y
    <span class="hljs-buit_in">this</span><span class="hljs-property">.z </span>:= z
    <span class="hljs-buit_in">this</span><span class="hljs-property">.vx </span>:= vx
    <span class="hljs-buit_in">this</span><span class="hljs-property">.vy </span>:= vy
    <span class="hljs-buit_in">this</span><span class="hljs-property">.vz </span>:= vz
    <span class="hljs-buit_in">this</span><span class="hljs-property">.mass </span>:= mass

<span class="hljs-keyword">fn</span> <span class="hljs-functionCall">Neptune()</span> -<span class="hljs-type">&gt; (body: </span>Body):
    <span class="hljs-keyword">mut</span> body: Body = new <span class="hljs-functionCall">Body(
        1.53796971148509165e+01,
        -2.59193146099879641e+01,
        1.79258772950371181e-01,
        *(2.68067772490389322e-03, DAYS_PER_YEAR)</span>,
        <span class="hljs-functionCall">*(1.62824170038242295e-03, DAYS_PER_YEAR)</span>,
        <span class="hljs-functionCall">*(-9.51592254519715870e-05, DAYS_PER_YEAR)</span>,
        <span class="hljs-functionCall">*(5.15138902046611451e-05, SOLAR_MASS)</span>
    )
    <span class="hljs-keyword">return</span> body

function <span class="hljs-functionCall">advance(dt: F8)</span> -&gt; ():
    <span class="hljs-keyword">constant</span> size : <span class="hljs-type">U8</span> = bodies<span class="hljs-property">.length
</span>    <span class="hljs-keyword">mut</span> i: <span class="hljs-type">U8</span> := <span class="hljs-number">0</span>
    <span class="hljs-keyword">loop</span>:
        <span class="hljs-keyword">if</span> i:
            <span class="hljs-keyword">is</span> size:
                <span class="hljs-keyword">break</span>
        <span class="hljs-keyword">constant</span> bodyi := bodies[i]
        <span class="hljs-keyword">mut</span> vxi : <span class="hljs-type">U8</span> := bodyi<span class="hljs-property">.vx
</span>        <span class="hljs-keyword">mut</span> vyi : <span class="hljs-type">U8</span> := bodyi<span class="hljs-property">.vy
</span>        <span class="hljs-keyword">mut</span> vzi : <span class="hljs-type">U8</span> := bodyi<span class="hljs-property">.vz
</span>        <span class="hljs-keyword">mut</span> j : <span class="hljs-type">U8</span> := <span class="hljs-functionCall">+(i, 1)</span>
        <span class="hljs-keyword">loop</span>:
            <span class="hljs-keyword">if</span> j:
                <span class="hljs-keyword">is</span> size:
                    <span class="hljs-keyword">break</span>
            <span class="hljs-keyword">constant</span> bodyj := bodies[j]
            <span class="hljs-keyword">constant</span> dx := <span class="hljs-functionCall">-(bodyi.x, bodyj.x)</span>
            <span class="hljs-keyword">constant</span> dy := <span class="hljs-functionCall">-(bodyi.y, bodyj.y)</span>
            <span class="hljs-keyword">constant</span> dz := <span class="hljs-functionCall">-(bodyi.z, bodyj.z)</span>

            <span class="hljs-keyword">constant</span> d2 := <span class="hljs-functionCall">+(*(dx, dx)</span><span class="hljs-functionCall">,+(*(dy, dy)</span>, <span class="hljs-functionCall">*(dz, dz)</span>))
            <span class="hljs-keyword">constant</span> mag := <span class="hljs-functionCall">/(dt, *(d2, Math.sqrt(d2)</span>))

            <span class="hljs-keyword">constant</span> massj := bodyj<span class="hljs-property">.mass
</span>            vxi := <span class="hljs-functionCall">-(vxi, *(dx, massj, mag)</span>)
            vyi := <span class="hljs-functionCall">-(vyi, *(dy, massj, mag)</span>)
            vzi := <span class="hljs-functionCall">-(vyi - *(dz, massj, mag)</span>)

            <span class="hljs-keyword">constant</span> massi := bodyi<span class="hljs-property">.mass
</span>            bodyj<span class="hljs-property">.vx </span>:= <span class="hljs-functionCall">+(bodyj.vx,  *(dx, massi, mag)</span>)
            bodyj<span class="hljs-property">.vy </span>:= <span class="hljs-functionCall">+(bodyj.vy, (dy, massi, mag)</span>)
            bodyj<span class="hljs-property">.vz </span>:= <span class="hljs-functionCall">+(bodyj.vz, (dz, massi, mag)</span>)
        bodyi<span class="hljs-property">.vx </span>:= vxi
        bodyi<span class="hljs-property">.vy </span>:= vyi
        bodyi<span class="hljs-property">.vz </span>:= vzi

    <span class="hljs-keyword">mut</span> i : <span class="hljs-type">U8</span> := <span class="hljs-functionCall">+(i, 1)</span>
    <span class="hljs-keyword">loop</span>:
        <span class="hljs-keyword">if</span> i:
            <span class="hljs-keyword">is</span> size:
                <span class="hljs-keyword">break</span>
        <span class="hljs-keyword">constant</span> body = bodies[i]
        body<span class="hljs-property">.x </span>:= <span class="hljs-functionCall">+(body.x,*(dt, body.vx)</span>)
        body<span class="hljs-property">.y </span>:= <span class="hljs-functionCall">+(body.y, *(dt, body.vy)</span>)
        body<span class="hljs-property">.z </span>:= <span class="hljs-functionCall">+(body.z, (dt, body.vz)</span>)

<span class="hljs-keyword">mut</span> i : <span class="hljs-type">U8</span> := <span class="hljs-number">0</span>
    <span class="hljs-keyword">loop</span>:
        <span class="hljs-keyword">if</span> i:
            <span class="hljs-keyword">is</span> n:
                <span class="hljs-keyword">break</span>
        <span class="hljs-functionCall">advance(0.01)</span>