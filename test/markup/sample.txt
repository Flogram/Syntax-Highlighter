PI := 3.14
SOLAR_MASS := *(4, PI, PI)
DAYS_PER_YEAR := 365.24

fn Body(x : I32 , y : I32, z : I32, vx : I32, vy : I32, vz : I32, mass : I32) -> ():
    this.x := x
    this.y := y
    this.z := z
    this.vx := vx
    this.vy := vy
    this.vz := vz
    this.mass := mass

fn Neptune() -> (body: Body):
    mut body: Body = new Body(
        1.53796971148509165e+01,
        -2.59193146099879641e+01,
        1.79258772950371181e-01,
        *(2.68067772490389322e-03, DAYS_PER_YEAR),
        *(1.62824170038242295e-03, DAYS_PER_YEAR),
        *(-9.51592254519715870e-05, DAYS_PER_YEAR),
        *(5.15138902046611451e-05, SOLAR_MASS)
    )
    return body

function advance(dt: F8) -> ():
    constant size : U8 = bodies.length
    mut i: U8 := 0
    loop:
        if i:
            is size:
                break
        constant bodyi := bodies[i]
        mut vxi : U8 := bodyi.vx
        mut vyi : U8 := bodyi.vy
        mut vzi : U8 := bodyi.vz
        mut j : U8 := +(i, 1)
        loop:
            if j:
                is size:
                    break
            constant bodyj := bodies[j]
            constant dx := -(bodyi.x, bodyj.x)
            constant dy := -(bodyi.y, bodyj.y)
            constant dz := -(bodyi.z, bodyj.z)

            constant d2 := +(*(dx, dx),+(*(dy, dy), *(dz, dz)))
            constant mag := /(dt, *(d2, Math.sqrt(d2)))

            constant massj := bodyj.mass
            vxi := -(vxi, *(dx, massj, mag))
            vyi := -(vyi, *(dy, massj, mag))
            vzi := -(vyi - *(dz, massj, mag))

            constant massi := bodyi.mass
            bodyj.vx := +(bodyj.vx,  *(dx, massi, mag))
            bodyj.vy := +(bodyj.vy, (dy, massi, mag))
            bodyj.vz := +(bodyj.vz, (dz, massi, mag))
        bodyi.vx := vxi
        bodyi.vy := vyi
        bodyi.vz := vzi

    mut i : U8 := +(i, 1)
    loop:
        if i:
            is size:
                break
        constant body = bodies[i]
        body.x := +(body.x,*(dt, body.vx))
        body.y := +(body.y, *(dt, body.vy))
        body.z := +(body.z, (dt, body.vz))

mut i : U8 := 0
    loop:
        if i:
            is n:
                break
        advance(0.01)